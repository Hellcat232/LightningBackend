{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water tracker app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of water tracker app\n"
  },
  "servers": [
    {
      "url": "https://lightningbackend.onrender.com"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about users."
    },
    {
      "name": "Water",
      "description": "Water operations."
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register user with this endpoint",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Jon Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "userExample@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "f12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "user"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "userExample@gmail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login with this endpoint",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "userExample@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "f12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Login operation!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "user",
                    "accessToken",
                    "refreshToken"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "efJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ8.eyJpZCI6IjY2OWE3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI7MTdyMTU5OTY1MCwiZXhwIjoxNzIxNjAzMjUwfQ.znG4iJzCsVkapp4v8lvKaUtNBtHZ6fbHGzIn9FIrrjg"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "eyJlbGciOiJIUlI1NiIsInR5cCI5IkpXVCJ1.eiJpZCI6IjD2OWD3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI7MTcyMTU5OTY1MCwiZXhwIjoxNzIyMjA0NDUwfQ.BtRjmgAKA8PHKL6acanHmjKYTVVgiwAFcB6P0QZj0Yo"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful logout operation"
          },
          "401": {
            "description": "Unauthorized error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user information",
        "operationId": "updateUser",
        "description": "Update user with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "userExample@gmail.com"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
<<<<<<< HEAD
                      "woman",
                      "man"
                    ],
                    "example": "woman"
=======
                      "female",
                      "male",
                      "woman"
                    ],
                    "example": "male"
>>>>>>> parent of 738259a (Merge branch 'main' into pr/38)
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  },
                  "weight": {
                    "type": "string",
                    "example": "70"
                  },
                  "sportsActivity": {
                    "type": "string"
                  },
                  "waterRate": {
                    "type": "string",
                    "example": "1.5"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update operation!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "user"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized error"
          }
        }
      }
    },
    "/users/refresh": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Refresh user's tokens",
        "operationId": "refreshUser",
        "description": "Refresh access and refresh tokens",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2OWE3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI6MTYyMTU5OTY1MCwiZXhwIjoxNjIxNjAzMjUwfQ.znG4iJzCsVkapp4v8lvKaUtNBtHZ6fbHGzIn9FIrrjg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "accessToken",
                    "refreshToken",
                    "user"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2OWE3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI6MTYyMTU5OTY1MCwiZXhwIjoxNjIxNjAzMjUwfQ.znG4iJzCsVkapp4v8lvKaUtNBtHZ6fbHGzIn9FIrrjg"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "efJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ8.eyJpZCI6IjY2OWE3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI7MTYyMTU5OTY1MCwiZXhwIjoxNzIxNjAzMjUwfQ.znG4iJzCsVkapp4v8lvKaUtNBtHZ6fbHGzIn9FIrrjg"
                    },
                    "sessionId": {
                      "type": "string",
                      "example": "mkkl6dD9zekaY4LFw25z5sy7wYrJo3RLyso+A31y"
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token invalid"
          },
          "401": {
            "description": "Unauthorized error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get current user",
        "operationId": "getCurrentUser",
        "description": "Get details of the currently authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "user"
                  ],
                  "properties": {
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/water/day": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add a water record",
        "operationId": "postDayWater",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "waterValue": {
                    "type": "number",
                    "example": 250
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "CREATED!"
                    },
                    "waterRecord": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/water/day/{id}": {
      "put": {
        "tags": [
          "Water"
        ],
        "summary": "Update a water record by ID",
        "operationId": "putDayWater",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "waterValue": {
                    "type": "number",
                    "example": 500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "UPDATED!"
                    },
                    "waterRecord": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Partially update a water record by ID",
        "operationId": "patchDayWater",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "waterValue": {
                    "type": "number",
                    "example": 600
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "UPDATED!"
                    },
                    "waterRecord": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete a water record by ID",
        "operationId": "deleteDayWater",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "DELETED!"
                    },
                    "waterRecord": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/water/fullDay": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get daily water records",
        "operationId": "getFullDayWater",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "localDate",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2024-07-24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "GETED!"
                    },
                    "waterRate": {
                      "type": "object",
                      "properties": {
                        "feasibility": {
                          "type": "number",
                          "example": 80
                        },
                        "completed": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "waterRecord": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "66a0d6dfbb254e5308c48e80"
                          },
                          "owner": {
                            "type": "string",
                            "example": "669fb9997871c8f7eeea3db4"
                          },
                          "localMonth": {
                            "type": "string",
                            "example": "07.2024"
                          },
                          "localDate": {
                            "type": "string",
                            "example": "24.07.2024"
                          },
                          "waterValue": {
                            "type": "number",
                            "example": 600
                          },
                          "localTime": {
                            "type": "string",
                            "example": "12:26"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-07-24T10:26:39.165Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-07-24T10:29:15.693Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/water/fullMonth": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get monthly water records",
        "operationId": "getFullMonthWater",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "localDate",
            "required": true,
            "schema": {
              "type": "string",
<<<<<<< HEAD
              "example": "05.2024"
=======
              "example": "2024-07-24"
>>>>>>> parent of 738259a (Merge branch 'main' into pr/38)
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "GETED!"
                    },
                    "waterRecord": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "string",
                              "example": "66a0d6dfbb254e5308c48e80"
                            },
                            "owner": {
                              "type": "string",
                              "example": "669fb9997871c8f7eeea3db4"
                            },
                            "localMonth": {
                              "type": "string",
                              "example": "07.2024"
                            },
                            "localDate": {
                              "type": "string",
                              "example": "24.07.2024"
                            },
                            "waterValue": {
                              "type": "number",
                              "example": 600
                            },
                            "localTime": {
                              "type": "string",
                              "example": "12:26"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-07-24T10:26:39.165Z"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-07-24T10:29:15.693Z"
                            }
                          }
                        }
                      }
                    },
                    "totalWaterDrunk": {
                      "type": "number",
                      "example": 1800
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "userExample@gmail.com"
          },
          "gender": {
            "type": "string",
            "enum": [
<<<<<<< HEAD
              "woman",
              "man"
            ],
            "example": "woman"
=======
              "Male",
              "Female"
            ],
            "example": "Male"
>>>>>>> parent of 738259a (Merge branch 'main' into pr/38)
          },
          "avatar": {
            "type": "string"
          },
          "weight": {
            "type": "string",
            "example": "70"
          },
          "sportsActivity": {
            "type": "string"
          },
          "waterRate": {
            "type": "string",
            "example": "1.5"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
<<<<<<< HEAD
          "_id",
          "email",
          "name",
          "waterRate",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "66a49dbcaf423ab2f8483baf"
          },
          "email": {
            "type": "string",
            "example": "koji221111222112619@cutxsew.com"
          },
          "accessToken": {
            "type": [
              "string",
              "null"
            ],
            "example": null
          },
          "refreshToken": {
            "type": [
              "string",
              "null"
            ],
            "example": null
          },
          "name": {
            "type": "string",
            "example": "Ko333"
          },
          "gender": {
            "type": [
              "string",
              "null"
            ],
            "example": null
          },
          "avatar": {
            "type": [
              "string",
              "null"
            ],
            "example": null
          },
          "weight": {
            "type": [
              "number",
              "null"
            ],
            "example": null
          },
          "sportsActivity": {
            "type": [
              "string",
              "null"
            ],
            "example": null
          },
          "waterRate": {
            "type": "string",
            "example": "1.5"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-27T07:11:56.091Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-27T12:06:16.546Z"
          }
        }
      },
      "waterRecordAdd": {
        "type": "object",
        "required": [
          "_id",
          "localMonth",
=======
>>>>>>> parent of 738259a (Merge branch 'main' into pr/38)
          "localDate",
          "localTime",
          "waterValue",
          "owner"
        ],
        "properties": {
          "_id": {
            "type": "string",
<<<<<<< HEAD
            "example": "66a5012643030e5ea5cd37bf"
          },
          "localMonth": {
            "type": "string",
            "example": "07.2024"
          },
          "localDate": {
            "type": "string",
            "example": "27.07.2024"
          },
          "localTime": {
            "type": "string",
            "example": "16:16"
          },
          "waterValue": {
            "type": "number",
            "example": 500
          },
          "owner": {
            "$ref": "#/components/schemas/owner"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "localDate",
          "localTime",
          "waterValue",
          "owner"
        ],
        "properties": {
          "_id": {
            "type": "string",
=======
>>>>>>> parent of 738259a (Merge branch 'main' into pr/38)
            "example": "60d0fe4f5311236168a109ca"
          },
          "localMonth": {
            "type": "string",
            "example": "07-2024"
          },
          "localDate": {
            "type": "string",
            "example": "2024-07-24"
          },
          "localTime": {
            "type": "string",
            "example": "14:30"
          },
          "waterValue": {
            "type": "number",
            "example": 250
          },
          "owner": {
            "type": "string",
            "example": "60d0fe4f5311236168a109cb"
          }
        }
<<<<<<< HEAD
      },
      "record": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "66a4b737f8ea2c7d1f1b3aa1"
          },
          "owner": {
            "type": "string",
            "example": "66a49dbcaf423ab2f8483baf"
          },
          "localMonth": {
            "type": "string",
            "example": "05.2024"
          },
          "localDate": {
            "type": "string",
            "example": "23.05.2024"
          },
          "localTime": {
            "type": "string",
            "example": "14:30"
          },
          "waterValue": {
            "type": "number",
            "example": 300
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-27T09:00:39.345Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-27T09:00:39.345Z"
          }
        }
      },
      "waterRecordFullMonth": {
        "type": "object",
        "required": [
          "localDate"
        ],
        "properties": {
          "localDate": {
            "type": "string",
            "example": "23.05.2024"
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/record"
            }
          },
          "dailyTotal": {
            "type": "number",
            "example": 2700
          },
          "feasibility": {
            "type": "number",
            "example": 100
          },
          "completed": {
            "type": "boolean",
            "example": true
          }
        }
=======
>>>>>>> parent of 738259a (Merge branch 'main' into pr/38)
      }
    }
  }
}