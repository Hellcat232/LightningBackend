{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water tracker app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of water tracker app\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    },
    {
      "url": "https://lightningbackend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about users."
    },
    {
      "name": "Water",
      "description": "Water operations."
    }
  ],
  "paths": {
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "userExample@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "f12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Login operation!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "user",
                    "accessToken",
                    "refreshToken"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "efJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ8.eyJpZCI6IjY2OWE3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI7MTdyMTU5OTY1MCwiZXhwIjoxNzIxNjAzMjUwfQ.znG4iJzCsVkapp4v8lvKaUtNBtHZ6fbHGzIn9FIrrjg"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "eyJlbGciOiJIUlI1NiIsInR5cCI5IkpXVCJ1.eiJpZCI6IjD2OWD3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI7MTcyMTU5OTY1MCwiZXhwIjoxNzIyMjA0NDUwfQ.BtRjmgAKA8PHKL6acanHmjKYTVVgiwAFcB6P0QZj0Yo"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get current user",
        "operationId": "getCurrentUser",
        "description": "Get details of the currently authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "user"
                  ],
                  "properties": {
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful logout operation"
          },
          "401": {
            "description": "Unauthorized error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/refresh": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Refresh user's tokens",
        "operationId": "refreshUser",
        "description": "Refresh access and refresh tokens",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2OWE3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI6MTYyMTU5OTY1MCwiZXhwIjoxNjIxNjAzMjUwfQ.znG4iJzCsVkapp4v8lvKaUtNBtHZ6fbHGzIn9FIrrjg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "accessToken",
                    "refreshToken",
                    "user"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2OWE3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI6MTYyMTU5OTY1MCwiZXhwIjoxNjIxNjAzMjUwfQ.znG4iJzCsVkapp4v8lvKaUtNBtHZ6fbHGzIn9FIrrjg"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "efJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ8.eyJpZCI6IjY2OWE3NzRkMDYzYjM2ZjJhMjNmODIyYyIsImlhdCI7MTYyMTU5OTY1MCwiZXhwIjoxNzIxNjAzMjUwfQ.znG4iJzCsVkapp4v8lvKaUtNBtHZ6fbHGzIn9FIrrjg"
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token invalid"
          },
          "401": {
            "description": "Unauthorized error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Register user with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Jon Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "userExample@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "f12345678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "user"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "userExample@gmail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user information",
        "operationId": "updateUser",
        "description": "Update user with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "userExample@gmail.com"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "female",
                      "male",
                      "woman"
                    ],
                    "example": "male"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  },
                  "weight": {
                    "type": "string",
                    "example": "70"
                  },
                  "sportsActivity": {
                    "type": "string"
                  },
                  "waterRate": {
                    "type": "string",
                    "example": "1.5"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update operation!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "user"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "userExample@gmail.com"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Male",
              "Female"
            ],
            "example": "Male"
          },
          "avatar": {
            "type": "string"
          },
          "weight": {
            "type": "string",
            "example": "70"
          },
          "sportsActivity": {
            "type": "string"
          },
          "waterRate": {
            "type": "string",
            "example": "1.5"
          }
        }
      }
    }
  }
}